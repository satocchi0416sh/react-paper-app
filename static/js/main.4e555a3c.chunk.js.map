{"version":3,"sources":["component/ExportAsPNG.jsx","component/ExportAsPDF.jsx","App.js","index.js"],"names":["onClickExport","target","document","getElementById","html2canvas","then","canvas","uri","downloadLink","createElement","download","href","body","appendChild","click","removeChild","window","open","saveAsImage","toDataURL","ExportPNGButton","onClick","canExport","client_w","clientWidth","client_h","clientHeight","scale","width","height","console","log","pdf","jsPDF","addImage","save","saveAsPDF","alert","ExportPDFButton","props","do","App","useState","maxColumn","setMaxColumn","maxRow","setMaxRow","text","setText","finalArray","setFinalArray","kakkostyle","setKakkostyle","columnList","setColumnList","rowList","setRowList","num","setNum","useEffect","arraySplit","split","a","style","i","push","column","row","words","forEach","data","list","list2","className","value","onChange","e","id","map","index","index2","undefined","length","charAt","type","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e555a3c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport html2canvas from \"html2canvas\";\n\n// html2canvas で得られる URI を用いてダウンロードさせる関数\n// Ref: https://stackoverflow.com/questions/31656689/how-to-save-img-to-users-local-computer-using-html2canvas\nconst saveAsImage = uri => {\n    const downloadLink = document.createElement(\"a\");\n\n    if (typeof downloadLink.download === \"string\") {\n        downloadLink.href = uri;\n\n        // ファイル名\n        downloadLink.download = \"ファイル.png\";\n\n        // Firefox では body の中にダウンロードリンクがないといけないので一時的に追加\n        document.body.appendChild(downloadLink);\n\n        // ダウンロードリンクが設定された a タグをクリック\n        downloadLink.click();\n\n        // Firefox 対策で追加したリンクを削除しておく\n        document.body.removeChild(downloadLink);\n    } else {\n        window.open(uri);\n    }\n}\n\nconst onClickExport = () => {\n    // 画像に変換する component の id を指定\n    const target = document.getElementById(\"target-component\");\n    html2canvas(target).then(canvas => {\n        const targetImgUri = canvas.toDataURL(\"img/png\");\n        saveAsImage(targetImgUri);\n    })\n};\n\nexport const ExportPNGButton = () => <button onClick={() => onClickExport()}>PNG出力</button>","import React from \"react\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n\n// html2canvas で得られる URI を用いてダウンロードさせる関数\n// Ref: https://stackoverflow.com/questions/31656689/how-to-save-img-to-users-local-computer-using-html2canvas\nconst saveAsPDF = (uri, width, height) => {\n    console.log(`${width}, ${height}`)\n    let pdf = new jsPDF(\"landscape\", \"mm\", \"a4\"); // pdfを生成\n    pdf.addImage(uri, 'SVG', 8, 0, width / 3.3, height / 3.3);\n    pdf.save(`ファイル.pdf`); // ダウンロードが開始される //　実際はuserを受け取り名前.pdfにしてあげている\n}\n\nconst onClickExport = (canExport) => {\n    if (canExport) {\n        // 画像に変換する component の id を指定\n        const target = document.getElementById(\"target-component\");\n        let client_w = document.getElementById(\"target-component\").clientWidth;\n        let client_h = document.getElementById(\"target-component\").clientHeight;\n        html2canvas(target, { scale: 2.5 }).then(canvas => {\n            const targetImgUri = canvas.toDataURL(\"img/svg\", 1.0);\n            saveAsPDF(targetImgUri, client_w, client_h);\n        })\n    }\n    else {\n        alert('pdf出力は20行20列の時のみ可能です。');\n    }\n};\n\nexport const ExportPDFButton = (props) => <button onClick={() => onClickExport(props.do)}>PDF出力</button>","import './App.css';\nimport { useState, useEffect } from \"react\"\nimport { ExportPNGButton } from './component/ExportAsPNG';\nimport { ExportPDFButton } from './component/ExportAsPDF';\n\nfunction App() {\n  const [maxColumn, setMaxColumn] = useState(20)\n  const [maxRow, setMaxRow] = useState(20)\n  const [text, setText] = useState(\"\")\n  const [finalArray, setFinalArray] = useState([[], [], []])\n  const [kakkostyle, setKakkostyle] = useState([])\n  const [columnList, setColumnList] = useState([])\n  const [rowList, setRowList] = useState([])\n  const [num, setNum] = useState(0)\n  useEffect(() => {\n    let arraySplit = text.split('')\n    let a = []\n    let style = []\n    for (let i = 0; i < maxColumn; i++) {\n      a.push([])\n      style.push([])\n    }\n    let column = 0\n    let row = 0\n    let words = 0\n    arraySplit.forEach((data) => {\n      words += 1\n      if (column !== 0 && row === 0 && (data === \"。\" || data === \"、\")) {\n        if (data === \"。\")\n          a[column - 1][maxRow - 1] = a[column - 1][maxRow - 1] + \"。\"\n        else if (data === \"、\")\n          a[column - 1][maxRow - 1] = a[column - 1][maxRow - 1] + \"、\"\n      } else if (data === \"\\n\") {\n        words -= 1\n        if (row !== 0) {\n          row = 0\n          column += 1\n        }\n      } else if (\n        data === ' '\n        || data === '\\n'\n        || data === '\\t'\n        || data === '\\r'\n        || data === '\\f'\n        || data === '\\v'\n        || data === '\\u00a0'\n        || data === '\\u1680'\n        || data === '\\u2000'\n        || data === '\\u200a'\n        || data === '\\u2028'\n        || data === '\\u2029'\n        || data === '\\u202f'\n        || data === '\\u205f'\n        || data === '\\u3000'\n        || data === '\\ufeff') {\n        words -= 1\n        row += 1\n      } else if (data === \"」\" && row !== 0 && a[column][row - 1] === \"︒\") {\n        a[column][row - 1] = \"﹂\" + a[column][row - 1]\n        style[column][row - 1] = true\n      } else if (data === \"」\" && row === 0 && a[column - 1][maxRow - 1] === \"︒\") {\n        a[column - 1][maxRow - 1] = \"﹂\" + a[column - 1][maxRow - 1]\n        style[column - 1][maxRow - 1] = true\n      } else {\n        a[column][row] = data\n        if (row === maxRow - 1) {\n\n          if (column !== maxColumn - 1) {\n            switch (data) {\n              case \"。\":\n                a[column][row] = \"︒\"\n                break;\n              case \"、\":\n                a[column][row] = \"︑\"\n                break;\n              case \"「\":\n                a[column][row] = \"﹁\"\n                break;\n              case \"」\":\n                a[column][row] = \"﹂\"\n                break;\n              case \"ー\":\n                a[column][row] = \"｜\"\n                break;\n\n              default:\n                break;\n            }\n            column += 1\n            row = 0\n          }\n        } else {\n          switch (data) {\n            case \"。\":\n              a[column][row] = \"︒\"\n              break;\n            case \"、\":\n              a[column][row] = \"︑\"\n              break;\n            case \"「\":\n              a[column][row] = \"﹁\"\n              break;\n            case \"」\":\n              a[column][row] = \"﹂\"\n              break;\n            case \"ー\":\n              a[column][row] = \"｜\"\n              break;\n\n            default:\n              break;\n          }\n          row += 1\n        }\n      }\n\n    })\n    setNum(words)\n    setFinalArray(a)\n    setKakkostyle(style)\n    console.log(style)\n  }, [text])\n\n  useEffect(() => {\n    let list = []\n    let list2 = []\n    let style = []\n    for (let i = 0; i < maxColumn; i++) {\n      list.push(i)\n      list2.push([])\n      style.push([])\n    }\n    setColumnList(list)\n    setFinalArray(list2)\n    setKakkostyle(style)\n  }, [maxColumn])\n\n  useEffect(() => {\n    let list = []\n    for (let i = 0; i < maxRow; i++) {\n      list.push(i)\n    }\n    setRowList(list)\n  }, [maxRow])\n\n  return (\n    <div className=\"App\">\n      <label>文字数:{num}</label>\n      <br />\n      <label>行:</label>\n      <input value={maxColumn} onChange={(e) => { setMaxColumn(e.target.value) }} />\n      <label>列:</label>\n      <input value={maxRow} onChange={(e) => { setMaxRow(e.target.value) }} />\n      <p>※pdf出力は20行20列の時のみ使用できます。</p>\n      <div className=\"table-wrapper\">\n        <table id=\"target-component\">\n          {columnList.map((column, index) => {\n            return (\n              <td key={index}>\n                {rowList.map((row, index2) => {\n                  if (finalArray[column][row] !== undefined && finalArray[column][row].length === 2 && finalArray[column][row].charAt(1) === \"。\") {\n                    console.log(\"こっち\")\n                    return (\n                      <tr key={index2}><p className={kakkostyle[column][row] ? \"kakkostyle\" : null}>{finalArray[column][row]}</p></tr>\n                    )\n                  } else {\n                    return (\n                      <tr key={index2}><p className={kakkostyle[column][row] ? \"kakkostyle\" : null}>{finalArray[column][row]}</p></tr>\n                    )\n                  }\n                })}\n              </td>\n            )\n          })}\n        </table>\n      </div>\n      <div className=\"clear\"></div>\n      <div className=\"bottom_wrapper\">\n        <textarea type=\"text\" value={text} onChange={(e) => { setText(e.target.value) }} />\n        <ExportPNGButton />\n        <ExportPDFButton do={maxColumn === \"20\" && maxRow === \"20\"} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}